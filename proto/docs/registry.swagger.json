{
  "swagger": "2.0",
  "info": {
    "title": "registry.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/trainer": {
      "post": {
        "summary": "Register makes a creates a new trainer in the safari",
        "description": "Trainer name, password, age \u0026 gender are required. \nAny other supplied fields will be ignored",
        "operationId": "Register",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/pbfResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbfTrainer"
            }
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    },
    "/trainer/{uid}": {
      "get": {
        "summary": "Get fetchs a trainer",
        "description": "The populated fields will depend on the auth scope of the token",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/pbfTrainer"
            }
          }
        },
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    },
    "/trainer/{uid}/auth": {
      "get": {
        "summary": "Enter authenticates a user to retrieve a an access token to authorize requests for a safari",
        "description": "HTTPS required w/ HTTP basic access authentication via a header\nAuthorization: Basic BASE64({user:pass})",
        "operationId": "Enter",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/pbfToken"
            }
          }
        },
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    }
  },
  "definitions": {
    "PokemonCollection": {
      "type": "object",
      "properties": {
        "pokemon": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbfPokemon"
          }
        }
      },
      "title": "Pokemon_Collection is self evident"
    },
    "TrainerGender": {
      "type": "string",
      "enum": [
        "BOY",
        "GIRL"
      ],
      "default": "BOY"
    },
    "pbfPokemon": {
      "type": "object",
      "properties": {
        "catch_rate": {
          "type": "integer",
          "format": "int32",
          "title": "CatchRate is chance of catching on a scale of 1-255"
        },
        "name": {
          "type": "string",
          "format": "string",
          "title": "Name is the English name of the pokemon"
        },
        "number": {
          "type": "integer",
          "format": "int32",
          "title": "Number is the canonical pokemon identifier"
        },
        "type": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbfPokemonType"
          },
          "title": "Type is the type of this pokemon"
        },
        "uid": {
          "type": "string",
          "format": "string",
          "title": "id is the unique identifier for this individual pokemon"
        }
      },
      "title": "Pokemon message is info about a pokemon"
    },
    "pbfPokemonType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "NORMAL",
        "FIGHTING",
        "FLYING",
        "POISON",
        "GROUND",
        "ROCK",
        "BUG",
        "GHOST",
        "STEEL",
        "FIRE",
        "WATER",
        "GRASS",
        "ELECTRIC",
        "PSYCHIC",
        "ICE",
        "DRAGON",
        "DARK",
        "FAIRY"
      ],
      "default": "UNKNOWN",
      "title": "Pokemon.Type is the canonical type of a pokemon"
    },
    "pbfResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "msg": {
          "type": "string",
          "format": "string"
        },
        "ok": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "Response is a generic message w/ Success, Message \u0026 Code"
    },
    "pbfTimestamp": {
      "type": "object",
      "properties": {
        "unix": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "pbfToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "format": "byte"
        },
        "type": {
          "$ref": "#/definitions/pbfTokenType"
        }
      }
    },
    "pbfTokenType": {
      "type": "string",
      "enum": [
        "ACCESS"
      ],
      "default": "ACCESS"
    },
    "pbfTrainer": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "$ref": "#/definitions/TrainerGender"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "password": {
          "type": "string",
          "format": "string"
        },
        "pc": {
          "$ref": "#/definitions/PokemonCollection"
        },
        "start": {
          "$ref": "#/definitions/pbfTimestamp"
        },
        "uid": {
          "type": "string",
          "format": "string"
        }
      }
    }
  }
}
